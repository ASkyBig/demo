{"version":3,"sources":["Input.js","PercentageShower.js","PercentageApp.js","index.js"],"names":["Input","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","number","e","value","target","setState","props","onInputSubmitCallback","react_default","a","createElement","type","onChange","handleNumberInput","bind","Component","PercentageShower","PercentageApp","numberFormat","valueInput","toFixed","src_Input","handleInput","PercentageShower_PercentageShower","ReactDOM","render","PercentageApp_PercentageApp","document","getElementById"],"mappings":"uKA0BeA,cAvBX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACTC,OAAQ,IAHFR,iFAMIS,GACd,IAAIC,EAAQD,EAAEE,OAAOD,MACrBP,KAAKS,SAAS,CACVJ,OAAQE,IAEZP,KAAKU,MAAMC,sBAAsBJ,oCAInC,OACEK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOC,KAAK,SAASR,MAAOP,KAAKI,MAAMC,OAAQW,SAAUhB,KAAKiB,kBAAkBC,KAAKlB,gBAlB3EmB,aCACC,mLAEf,OACER,EAAAC,EAAAC,cAAA,WAAMd,KAAKU,MAAML,eAHqBc,aCEzBE,cACjB,SAAAA,IAAc,IAAAxB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqB,IACVxB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuB,GAAAlB,KAAAH,QACKI,MAAQ,CACTkB,aAAc,IAHRzB,2EAMFU,GACR,IAAIgB,IAAehB,GAAOiB,QAAQ,GAAK,IACvCxB,KAAKS,SAAS,CACVa,aAAcC,qCAKpB,OACEX,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACW,EAAD,CAAOd,sBAAuBX,KAAK0B,YAAYR,KAAKlB,QACpDY,EAAAC,EAAAC,cAACa,EAAD,CAAkBtB,OAAQL,KAAKI,MAAMkB,uBAlBNH,aCA3CS,IAASC,OAAOjB,EAAAC,EAAAC,cAACgB,EAAD,MAAmBC,SAASC,eAAe","file":"static/js/main.115c7ca6.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\nclass Input extends Component {\n    constructor() {\n        super()\n        this.state = {\n            number: ''\n        }\n    }\n    handleNumberInput(e) {\n        let value = e.target.value\n        this.setState({\n            number: value\n        })\n        this.props.onInputSubmitCallback(value)\n    }   \n\n    render () {\n      return (\n        <div>\n          <input type='number' value={this.state.number} onChange={this.handleNumberInput.bind(this)} />\n        </div>\n      )\n    }\n  }\n\nexport default Input","import React, {Component} from 'react'\n\nexport default class PercentageShower extends Component {\n    render () {\n      return (\n        <div>{this.props.number}</div>\n      )\n    }\n  }","import React, {Component} from 'react'\nimport Input from './Input'\nimport PercentageShower from './PercentageShower'\n\nexport default class PercentageApp extends Component {\n    constructor() {\n        super()\n        this.state = {\n            numberFormat: ''\n        }\n    }\n    handleInput(value) {\n        let valueInput = (+value).toFixed(2) + '%'\n        this.setState({\n            numberFormat: valueInput\n        })\n    }\n\n    render () {\n      return (\n        <div>\n            <Input onInputSubmitCallback={this.handleInput.bind(this)} />\n            <PercentageShower number={this.state.numberFormat} />\n        </div>\n      )\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PercentageApp from './PercentageApp'\n\nReactDOM.render(<PercentageApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}