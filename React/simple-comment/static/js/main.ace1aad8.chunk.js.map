{"version":3,"sources":["CommentInput.js","Comment.js","CommentList.js","CommentApp.js","index.js"],"names":["CommentInput","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","userName","userContent","loadUserName","commentInput","focus","localStorage","getItem","setState","event","target","value","setItem","_this$state","createTime","Date","now","props","inputCallback","_this2","react_default","a","createElement","onChange","handleUserName","bind","onBlur","handleBlur","style","color","ref","input","handleUserContent","backgroundColor","onClick","handleSubmit","Component","Comment","existTimeStr","renderTime","timer","setInterval","clearInterval","onDeleteItem","idx","itemInfo","existTime","parseInt","Math","max","deleteComment","CommentList","onDeleteComment","commentList","console","log","length","map","item","index","Comment_Comment","key","handleDeleteItem","CommentApp","loadComments","comments","JSON","parse","stringify","splice","saveComments","alert","push","CommentInput_CommentInput","handleInputCallback","CommentList_CommentList","handleDeleteComment","ReactDOM","render","CommentApp_CommentApp","document","getElementById"],"mappings":"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","file":"static/js/main.ace1aad8.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\nexport default class CommentInput extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tuserName: '',\n\t\t\tuserContent: ''\n\t\t}\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.loadUserName()\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.commentInput.focus()\n\t}\n\n\tloadUserName() {\n\t\tconst userName = localStorage.getItem('userName')\n\t\tuserName && this.setState({\n\t\t\tuserName\n\t\t})\n\t}\n\n\thandleUserName(event) {\n\t\tconst userName = event.target.value\n\t\tthis.setState({\n\t\t\tuserName: userName\n\t\t})\n\t}\n\n\thandleBlur() {\n\t\tlocalStorage.setItem(\"userName\", this.state.userName)\n\t}\n\n\thandleUserContent(event) {\n\t\tconst userContent = event.target.value\n\t\tthis.setState({\n\t\t\tuserContent: userContent\n\t\t})\n\t}\n\n\thandleSubmit() {\n\t\tconst {userName, userContent} = this.state\n\t\tconst createTime = Date.now()\n\t\tthis.props.inputCallback(userName, userContent, createTime)\n\t\tthis.setState({\n\t\t\tuserName: userName,\n\t\t\tuserContent: ''\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<span>用户名：</span>\n\t\t\t\t<input value={this.state.userName} onChange={this.handleUserName.bind(this)} onBlur={this.handleBlur.bind(this)} />\n\t\t\t\t<hr/>\n\t\t\t\t<span style={{color: 'red'}}>评论内容：</span>\n\t\t\t\t<input ref={(input) => this.commentInput = input} value={this.state.userContent} onChange={this.handleUserContent.bind(this)} />\n\t\t\t\t<hr />\n\t\t\t\t<button style={{backgroundColor: '#39a2d2', color: 'white'}} onClick={this.handleSubmit.bind(this)}>发布</button>\n\t\t\t</div>\n\t\t)\n\t}\n}","import React, {Component} from 'react'\n\nexport default class Comment extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\texistTimeStr: ''\n\t\t}\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.renderTime()\n\t\tthis.timer = setInterval(() => {\n\t\t\tthis.renderTime()\n\t\t}, 5000)\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timer)\n\t}\n\n\tdeleteComment() {\n\t\tthis.props.onDeleteItem(this.props.idx)\n\t}\n\n\trenderTime() {\n\t\tconst {itemInfo} = this.props\n\t\tconst existTime = (Date.now() - itemInfo.createTime) / 1000\n\t\tconst existTimeStr = existTime < 60\n\t\t\t\t\t\t\t\t? parseInt(Math.max(existTime, 1)) + '秒前'\n\t\t\t\t\t\t\t\t: existTime < 3600\n\t\t\t\t\t\t\t\t\t? (parseInt(existTime / 60) + '分钟前')\n\t\t\t\t\t\t\t\t\t: (parseInt(existTime / 3600) + '小时前')\n\t\tthis.setState({\n\t\t\texistTimeStr: existTimeStr\n\t\t})\n\t}\n\n\trender() {\n\t\tconst {itemInfo} = this.props\n\t\treturn (\n\t\t\t<div>{itemInfo.userName}: {itemInfo.userContent} —— 发布于 {this.state.existTimeStr} <button onClick={this.deleteComment.bind(this)}>删除</button></div>\n\t\t)\n\t}\n}","import React, {Component} from 'react'\nimport Comment from './Comment'\n\nexport default class CommentList extends Component {\n\thandleDeleteItem(idx) {\n\t\tthis.props.onDeleteComment(idx)\n\t}\n\n\trender() {\n\t\tconst {commentList} = this.props\n\t\tconsole.log('commentList.js =》commentList', commentList)\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\t!!commentList.length && commentList.map((item, index) => {\n\t\t\t\t\t\treturn <Comment key={index} idx={index} itemInfo={item} onDeleteItem={this.handleDeleteItem.bind(this)} />\n\t\t\t\t\t\t// return <div key={idx}>{item.userName}: {item.userContent}</div>\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n}","import React, {Component} from 'react'\nimport CommentInput from './CommentInput'\nimport CommentList from './CommentList'\n\nexport default class CommentApp extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tcommentList: []\n\t\t}\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.loadComments()\n\t}\n\n\tloadComments() {\n\t\tconst comments = localStorage.getItem('comment')\n\t\tcomments && this.setState({\n\t\t\tcommentList: JSON.parse(comments)\n\t\t})\n\t}\n\n\tsaveComments() {\n\t\tlocalStorage.setItem('comment', JSON.stringify(this.state.commentList))\n\t}\n\n\thandleDeleteComment(idx) {\n\t\tconst {commentList} = this.state\n\t\tcommentList.splice(idx, 1)\n\n\t\tthis.setState({\n\t\t\tcommentList\n\t\t})\n\t\tthis.saveComments()\n\t}\n\n\thandleInputCallback(userName, userContent, createTime) {\n\t\tif(!userName) {\n\t\t\talert('enter userName')\n\t\t}\n\n\t\tif(!userContent) {\n\t\t\talert('enter userContent')\n\t\t}\n\n\t\tthis.state.commentList.push({userName, userContent, createTime})\n\t\tthis.setState({\n\t\t\tcommentList: this.state.commentList\n\t\t})\n\t\tthis.saveComments()\n\t\tconsole.log(userName, ' + ', userContent)\n\t}\n\n\trender() {\n\t\tconst {commentList} = this.state\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<CommentInput inputCallback={this.handleInputCallback.bind(this)}/>\n\t\t\t\t<CommentList onDeleteComment={this.handleDeleteComment.bind(this)} commentList={commentList}/>\n\t\t\t</div>\n\t\t)\n\t}\n}","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport CommentApp from './CommentApp'\n\nReactDOM.render(\n\t<CommentApp />,\n\tdocument.getElementById('root')\n)\n\n// class BlackBorderContainer extends Component {\n//  \trender() {\n//  \t\treturn (\n//  \t\t\t<div>\n//  \t\t\t\t{ \n//  \t\t\t\t\t!!this.props.children && this.props.children.map((item, i) => {\n//  \t\t\t\t\t\treturn <div key={i} style={{border: '1px solid black'}}>{item}</div>\n// \t \t\t\t\t})\n// \t \t\t\t}\n//  \t\t\t</div>\n//  \t\t)\n//  \t}\n// }\n\n// ReactDOM.render(\n// \t<BlackBorderContainer>\n// \t  <div className='name'>My Name：Lucy</div>\n// \t  <p className='age'>\n// \t    My Age：<span>12</span>\n// \t  </p>\n// \t</BlackBorderContainer>,\n// \tdocument.getElementById('root')\n// )\n\n// class Post extends Component {\n// \tcomponentDidMount() {\n// \t\t// console.log(this.p.offsetHeight)\n// \t}\n\n// \thandleClick() {\n// \t\tconsole.log(this.p.offsetHeight)\n// \t}\n\n// \trender() {\n// \t\treturn (\n// \t\t\t<p ref={(p) => this.p = p} onClick={this.handleClick.bind(this)} >{this.props.content}</p>\n// \t\t)\n// \t}\n// }\n\n// ReactDOM.render(\n// \t<Post content={\"aaa\"} />,\n// \tdocument.getElementById('root')\n// )\n// class AutoFocusInput extends Component {\n//   componentDidMount () {\n//     this.input.focus()\n//   }\n\n//   render () {\n//     return (\n//       <input ref={(input) => this.input = input} />\n//     )\n//   }\n// }\n\n// ReactDOM.render(\n//   <AutoFocusInput />,\n//   document.getElementById('root')\n// )\n// class Clock extends Component {\n// \tconstructor() {\n// \t\tsuper()\n// \t\tthis.state = {\n// \t\t\ttime: new Date()\n// \t\t}\n// \t}\n// \tcomponentDidMount() {\n// \t\tthis.timer = setInterval(() => {\n// \t\t\tthis.setState({\n// \t\t\t\ttime: new Date()\n// \t\t\t})\n// \t\t}, 1000)\n// \t}\n// \tcomponentWillUnmount() {\n// \t\tclearInterval(this.timer)\n// \t\tconsole.log('unmount')\n// \t}\n\n// \trender() {\n// \t\treturn(\n// \t\t\t<div>{this.state.time.toLocaleTimeString()}</div>\n// \t\t)\n// \t}\n// }\n\n// class Index extends Component {\n// \tconstructor() {\n// \t\tsuper() \n// \t\tthis.state = {\n// \t\t\tisShowClock: true\n// \t\t}\n\t\t\n// \t}\n\n// \thandleClick() {\n// \t\tthis.setState({\n// \t\t\tisShowClock: !this.state.isShowClock\n// \t\t})\n// \t}\n\n// \trender() {\n// \t\tconst {isShowClock} = this.state\n// \t\treturn (\n// \t\t\t<div>\n// \t\t\t  {\n// \t\t\t\tisShowClock\n// \t\t\t\t\t? <Clock />\n// \t\t\t\t\t: null\n// \t\t\t  }\n// \t\t\t  <button onClick={this.handleClick.bind(this)}>click</button>\n// \t\t\t</div>\n// \t\t)\n// \t}\n// }\n\n// ReactDOM.render(\n// \t<Index />,\n// \tdocument.getElementById('root')\n// )\n\n// class Lesson extends Component {\n//   clickFunc(item, index) {\n//   \tconsole.log(index, item.title)\n//   }\n//   render() {\n//   \tconst item = this.props.item\n//   \tconst index = this.props.index\n//   \treturn (\n//   \t\t<div onClick={this.clickFunc.bind(this, item, index)}>\n//   \t\t\t<h1>{item.title}</h1>\n//   \t\t\t<p>{item.description}</p>\n//   \t\t</div>\n//   \t)\n  \t\n//   }\n// }\n\n// class LessonsList extends Component {\n\n\n//   render () {\n//   \tconst lessons = [\n// \t  { title: 'Lesson 1: title', description: 'Lesson 1: description' },\n// \t  { title: 'Lesson 2: title', description: 'Lesson 2: description' },\n// \t  { title: 'Lesson 3: title', description: 'Lesson 3: description' },\n// \t  { title: 'Lesson 4: title', description: 'Lesson 4: description' }\n//   \t]\n//   \treturn (\n//   \t\tlessons.map((item, index) => {\n//   \t\t\treturn <Lesson item={item} key={index} index={index} />\n//   \t\t})\n  \t\t\n//   \t)\n//   } \n// }\n// class Computer extends Component {\n//   constructor () {\n//   \tsuper()\n//   \tthis.state = {\n//   \t\tstatus: false\n//   \t}\n//   }\n\n//   switchComputerStatus () {\n//   \tthis.setState({\n//   \t\tstatus: !this.state.status\n//   \t})\n//   }\n\n//   render () {\n//     return (\n//       <div>\n//       \t<Screen showContent=\"1\" status={this.state.status} />\n//         <button onClick={this.switchComputerStatus.bind(this)}>{this.state.status ? 'on' : 'off'}</button>\n//       </div>\n//     )\n//   }\n// }\n\n// class Screen extends Component {\n//   render () {\n//   \tconst {showContent, status} = this.props\n//     return (\n//       <div className='screen'>\n//       \t{\n//       \t\tstatus \n//       \t\t\t? showContent ? showContent : '无内容'\n//       \t\t\t: null\n//       \t}\n//       \t{\n//       \t\tstatus ? \"显示器亮了\" : '显示器关了'\n//       \t}\n//       </div>\n//     )\n//   }\n// }\n// class LikeButton extends Component {\n// \tstatic defaultProps = {\n// \t    likedText: '取消',\n// \t    unlikedText: '点赞'\n// \t  }\n// \tconstructor() {\n// \t\tsuper()\n// \t\tthis.state = {\n// \t\t\tisLiked: false\n// \t\t}\n// \t}\n\n// \thandleClickOnButton() {\n// \t\tthis.setState({\n// \t\t\tisLiked: !this.state.isLiked\n// \t\t})\n// \t\tif(this.props.onClick) {\n// \t\t\tthis.props.onClick()\n// \t\t}\n// \t}\n\n// \trender() {\n\t\n\t\t\n// \t\treturn(\n// \t\t\t<button onClick={this.handleClickOnButton.bind(this)}>\n// \t\t\t\t{this.state.isLiked ? this.props.likedText : this.props.unlikedText}👍\n// \t\t\t</button>\n// \t\t)\n// \t}\n// }\n\n// class Index extends Component {\n// \tconstructor() {\n// \t\tsuper()\n// \t\tthis.state = {\n// \t\t\tlikedText: '已赞',\n// \t\t\tunlikedText: '赞'\n// \t\t}\n// \t}\n\n// \thandleClickOnButton() {\n\n// \t\tthis.setState({\n// \t\t\tlikedText: '取消',\n// \t\t\tunlikedText: '点赞'\n// \t\t})\n// \t}\n\n// \trender() {\n// \t\treturn(\n// \t\t\t<div>\n// \t\t\t\t<LikeButton likedText={this.state.likedText} unlikedText={this.state.unlikedText} />\n// \t\t\t\t<button onClick={this.handleClickOnButton.bind(this)}>\n// \t\t\t\t\t修改\n// \t\t\t\t</button>\n\n// \t\t\t</div>\n\t\t\t\n// \t\t)\n// \t}\n// }\n// class House extends Component {\n// \trender() {\n// \t\treturn (\n// \t\t\t<div className='house'>\n// \t\t\t\t<Room>\n// \t\t\t\t\t<Man />\n// \t\t\t\t\t<Dog />\n// \t\t\t\t\t<Dog />\n// \t\t\t\t</Room>\n// \t\t\t\t<Bathroom />\n// \t\t\t</div>\n// \t\t)\n// \t}\n// }\n\n// class Room extends Component {\n// \trender() {\n// \t\treturn (\n// \t\t\t<div className='room'>\n// \t\t\t\t<Man />\n// \t\t\t\t<Dog />\n// \t\t\t\t<Dog />\n// \t\t\t</div>\n// \t\t)\n// \t}\n// }\n\n// class Man extends Component {\n// \trender() {\n// \t\treturn (\n// \t\t\t<div className='man'>man</div>\n// \t\t)\n// \t}\n// }\n\n// class Bathroom extends Component {\n// \trender() {\n// \t\treturn (\n// \t\t\t<div className='bathroom'>bathroom</div>\n// \t\t)\n// \t}\n// }\n\n// class Dog extends Component {\n// \tconstructor() {\n// \t\tsuper()\n// \t\tthis.state = {\n// \t\t\tisRunning: false,\n// \t\t\tisBarking: false\n// \t\t}\n// \t}\n\n// \tbark() {\n// \t\tthis.setState({\n// \t\t\tisBarking: true\n// \t\t})\n// \t\tsetTimeout(() => {\n// \t\t\tconsole.log(this.state.isBarking)\n// \t\t\tthis.setState({isBarking: false})\n// \t\t}, 50)\n// \t\tconsole.log('bark')\n// \t}\n\n// \trun() {\n// \t\tthis.setState({\n// \t\t\tisRunning: true\n// \t\t})\n// \t\tsetTimeout(() => {\n// \t\t\tconsole.log(this.state.isRunning)\n// \t\t\tthis.setState({isRunning: false})\n// \t\t}, 50)\n// \t\tconsole.log('run')\n// \t}\n\n// \tbarkAndRun() {\n// \t\tthis.bark()\n// \t\tthis.run()\n// \t}\n\n// \trender() {\n// \t\treturn (\n// \t\t\t<div onClick={this.barkAndRun.bind(this)}>dog</div>\n// \t\t)\n// \t}\n// }\n\n\n// 函数写法\n// function renderContent(content) {\n// \treturn <h1>{content}</h1>\n// }\n// const Header = renderContent('hello world')\n\n// ReactDOM.render(\n// \tHeader,\n// \tdocument.getElementById('root')\n// )"],"sourceRoot":""}